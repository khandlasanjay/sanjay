{"version":3,"file":"/home/manish/Practical_Programs/ts_crud/src/controller/testController.ts","sources":["/home/manish/Practical_Programs/ts_crud/src/controller/testController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\nimport db from \"../models/connection\";\nimport fs from \"fs\";\nimport PDFGenerator from \"pdfkit\";\nconst Cars=db.Cars;\n\nclass CarsController{\n\n    public viewCars = async (req:Request, res:Response)=>{\n        const cars = await Cars.findAll({ });\n            const response = {  \n                data:cars,\n            }\n            res.status(200).json(response)  \n    }\n\n    public addCars = async (req:Request, res:Response)=>{\n\n        // Create a cars\n        const cars = req.body;\n\n        // Save cars in the database\n        await Cars.create(cars)\n            .then((data:any)=> {\n                console.log(cars);\n            res.status(200).send(data);\n            })\n            .catch((err:any)=> {\n            res.status(500).send({\n                message:\n                err.message || \"Some error occurred while creating the Cars.\"\n            });\n        });\n    };\n\n    public findOneCars = async (req:Request, res:Response)=>{\n\n        const id = req.params.id;\n\n        const cars = await Cars.findByPk(id)\n        const response = {  \n            data:cars,\n        }\n        res.status(200).json(response) \n    }\n\n    public updateCars = async (req:Request, res:Response)=>{\n\n        const id = req.params.id;\n\n        // Update the cars\n        const cars = req.body;\n\n        // update query\n        await Cars.update(cars,{ where: { id : id } })\n            .then((data:any)=> {\n            res.status(200).json(data);\n            })\n            .catch((err:any)=> {\n            res.status(500).send({\n                message:\n                err.message || \"Some error occurred while updating the Cars.\"\n            });\n        });\n\n    }\n\n    public deleteCars = async (req:Request, res:Response)=>{\n\n        const id  = req.params.id;\n\n        // const cars = req.body;\n\n        await Cars.destroy({ where:{ id: id}})\n        .then((data:any) =>{\n            res.status(200).json(data);\n        })\n        .catch((err:any) =>{\n            res.status(500).json(err);\n        })\n    }\n\n    public imageUpload = async (req:Request, res:Response)=>{\n             \n        if (!req.file) {\n            console.log(\"No file upload\");\n        } else {\n            console.log(req.file.filename)\n            const imgsrc = 'http://127.0.0.1:3000/images/' + req.file.filename\n\n            const cars = req.body;\n            \n            await Cars.create({ images:imgsrc,...cars })\n                .then((data:any)=> {\n                    console.log(data);\n                    res.status(200).send(data);\n            })\n                .catch((err:any)=> {\n                res.status(500).send({\n                    message:\n                    err.message || \"Some error occurred while creating the Cars.\"\n                });\n            });\n        }\n    }\n\n    public pdfGenerator = async (req:Request, res:Response)=>{\n      \n        // instantiate the library\n        let theOutput = new PDFGenerator \n        //const cars = req.body;\n        // pipe to a writable stream which would save the result into the same directory\n        theOutput.pipe(fs.createWriteStream('CarsDocument.pdf'))\n        \n        const cars = await Cars.findAll({ });\n            const response:any = {  \n                data:cars,\n            }\n            \n        theOutput.text(JSON.stringify(response));\n        // res.send(`<%%>`)\n\n        // write out file\n        theOutput.end();\n    }\n\n};\n\nexport default CarsController;"]}